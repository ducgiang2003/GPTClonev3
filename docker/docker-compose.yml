
services:
  backend:
    build:
      context: ../AI-backend
      dockerfile: ../docker/nodeJS.Dockerfile
    ports:
      - "3001:3000"
    networks:
      - app-network
    container_name: AI-API
    volumes:
      - ../AI-backend:/usr/src/app  # Mount mã nguồn Web từ host vào container
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    



  frontend:
    build:
      context: ../AI-frontend
      dockerfile: ../docker/nextJS.Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    container_name: AI-WEB
    volumes:
      - ../AI-frontend:/usr/src/app  
      - /usr/src/app/node_modules
      - /usr/src/app/.next



  nginx:
    image: nginx:latest
    container_name: AI-NGINX
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    

networks:
  app-network:
    driver: bridge